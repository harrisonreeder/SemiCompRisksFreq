% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FreqSurv_HReg2.R
\name{FreqSurv_HReg2}
\alias{FreqSurv_HReg2}
\title{Fit Parametric Univariate Survival Model}
\usage{
FreqSurv_HReg2(
  Formula,
  data,
  na.action = "na.fail",
  subset = NULL,
  weights = NULL,
  hazard = c("weibull"),
  knots_vec = NULL,
  p0 = 4,
  startVals = NULL,
  control = NULL,
  quad_method = "kronrod",
  n_quad = 15,
  optim_method = "BFGS",
  extra_starts = 0,
  output_options = NULL
)
}
\arguments{
\item{Formula}{a Formula object, with the outcome on the left of a
\code{~}, and covariates on the right. It is of the form,
\code{left truncation time | time to event +
  corresponding censoring indicator ~ covariates}.
For example, \code{y_L | y + delta ~ x_1 + x_2 + x_3}.
If there is no left truncation, then the lefthand side should only contain
the two sets of outcome variables.}

\item{data}{a \code{data.frame} in which to interpret
the variables named in Formula.}

\item{na.action}{how NAs are treated. See \code{\link[stats]{model.frame}}.}

\item{subset}{a specification of the rows to be used: defaults to all rows.
See \code{\link[stats]{model.frame}}.}

\item{weights}{Vector of numeric weights of length \eqn{n} corresponding
to each observed individual.}

\item{hazard}{String (not case sensitive) specifying the form of the baseline hazard.
Options are \code{"weibull"} for Weibull,
\code{"piecewise"} for piecewise constant on the hazard scale,
\code{"bspline"} for cubic B-spline on the log-hazard scale,
and \code{"royston-parmar"} for restricted cubic spline on the log-cumulative hazard scale.
Aliases for these are \code{"wb"}, \code{"pw"}, \code{"bs"}, and \code{"rp"} respectively.}

\item{knots_vec}{Used for hazard specifications besides Weibull, a
vector increasing sequence of integers, each corresponding to
the knots for the flexible model on the baseline hazard.
If \code{NULL}, will be created by \code{\link{get_default_knots}}
according to the number of parameters specified by \code{nP0}.}

\item{p0}{Integer indicating how many baseline hazard parameters
should be specified for each of the three transition hazards.
This input is only relevant when hazard is something other than
\code{"weibull"} and is superceded by knots_vec.}

\item{startVals}{A numeric vector of parameter starting values,
arranged as follows:
the first \eqn{k} elements are the baseline hazard parameters,
then the last\eqn{q} elements are the regression parameters.
If set to \code{NULL}, generated internally using \code{\link{get_start}}.}

\item{control}{a list of control attributes passed directly
into the \code{optim} function.}

\item{quad_method}{String indicating which quadrature method to use to
evaluate numerical integral of B-spline. Options are
\code{"kronrod"} for Gauss-Kronrod quadrature or
\code{"legendre"} for Gauss-Legendre quadrature.}

\item{n_quad}{Scalar for number of Gaussian quadrature points used to
evaluate numerical integral of B-spline.}

\item{optim_method}{a string naming which \code{optim}
method should be used for optimization.}

\item{extra_starts}{Integer giving the number of extra
starts to try when optimizing.}

\item{output_options}{List of named boolean elements specifying whether
certain additional components should be included in
the model object output. Options include
\itemize{
\item{Finv}{Variance-covariance matrix. Defaults to \code{TRUE}.}
\item{grad_mat_return}{Matrix with rowwise
score vectors for each individual evaluated at the MLE.
Used to compute "cheese" or "meat" in robust standard error computation.
Defaults to \code{FALSE}.}
\item{cheese}{Sum of outer products of individual score vectors,
used as the "cheese" or "meat" in robust standard error computation.
Defaults to \code{TRUE}.}
\item{data_return}{Original data frame used to fit model.
Defaults to \code{FALSE}.}
}}
}
\value{
An object of class \code{Freq_HReg}.
}
\description{
Fit Parametric Univariate Survival Model
}
\examples{
#loading a data set
data(scrData)

#fitting Weibull survival model on terminal event
form <- Formula::Formula(time2 + event2 ~ x1 + x2 + x3 | x1 + x2 | x1 + x2)
fit_WB	<- FreqSurv_HReg2(Formula = form, data=scrData,
extra_starts = 0,hazard = "weibull",optim_method = c("BFGS"))

#exploring results
fit_WB
summ.fit_WB <- summary(fit_WB); names(summ.fit_WB)
summ.fit_WB
pred_WB <- predict(fit_WB, tseq=seq(from=0.1, to=30, length.out=100))
plot(pred_WB, plot.est="Haz")
plot(pred_WB, plot.est="Surv")

}
